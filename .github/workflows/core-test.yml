name: Testing core

on:
  pull_request:
    types: [synchronize, opened, reopened]

concurrency:  # Cancel previous workflows on the same pull request
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    name: Test on ${{ matrix.os }} OS
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip' # caching pip dependencies
      - name: Install dependencies
        run: |
          git config --global user.email "CI@example.com"
          git config --global user.name "CI Almighty"
          python -m pip install -U pip  # Official recommended way
          pip install pytest
          # zarr is needed to test core
          pip install zarr  
          pip install -e .
      - name: Installad datalad
        # run: |
        #   pip install datalad-installer
        #   if [ ${{ runner.os }} = 'Linux' ]; then
        #     datalad-installer --sudo ok git-annex --method datalad/packages
        #   elif [ ${{ runner.os }} = 'macOS' ]; then
        #     datalad-installer --sudo ok git-annex --method brew
        #   elif [ ${{ runner.os }} = 'Windows' ]; then
        #     datalad-installer --sudo ok git-annex --method datalad/git-annex:release
        #   fi
        #   pip install datalad
        #   git config --global filter.annex.process "git-annex filter-process"  # recommended for efficiency
        # shell: bash
      - name: Installad datalad on Linux
        if: runner.os == 'Linux'
        run: |
          pip install datalad-installer
          datalad-installer --sudo ok git-annex --method datalad/packages
          pip install datalad
      - name: Install datalad on Windows 
        if: runner.os == 'Windows'
        run: |
          pip install datalad-installer
          datalad-installer --sudo ok git-annex --method datalad/git-annex:release
          pip install datalad
      - name: Install datalad on Mac
        if: runner.os == 'macOS' 
        run: |
          pip install datalad-installer
          datalad-installer --sudo ok git-annex --method brew
          pip install datalad
      - name: Test download
        run: pytest -rA spikeinterface/core/tests/test_datasets.py 
      - name: Test core with pytest
        run: |
          pytest --capture=tee-sys --full-trace -vv -rA spikeinterface/core --durations=0 --durations-min=0.001 > report.txt
          cat report.txt
      - name: Build test summary
        run: | 
          pip install pandas
          pip install tabulate
          echo "# Timing profile of core tests in ${{matrix.os}}" >> $GITHUB_STEP_SUMMARY 
          # Outputs markdown summary to standard output
          python ./.github/build_job_summary.py report.txt >> $GITHUB_STEP_SUMMARY 
          cat $GITHUB_STEP_SUMMARY 
          rm report.txt
        shell: bash  # Necessary for pipeline to work on windows